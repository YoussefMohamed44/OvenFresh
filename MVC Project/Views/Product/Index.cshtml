@model List<Product>
@{
    ViewData["Title"] = "Products";
}

<script>

        document.addEventListener('DOMContentLoaded', function() {
        // Select all add-to-cart buttons
        const addToCartButtons = document.querySelectorAll('.add-to-cart');

        // Add click event listener to each button
        addToCartButtons.forEach(button => {
            button.addEventListener('click', function(event) {
                // Prevent the default action of the button if it's a form submission
                event.preventDefault();

                // Get the product name and price from data attributes
                const productName = this.getAttribute('data-product-name');
                const productPrice = this.getAttribute('data-product-price');

                // Show an alert
                alert(`Added ${productName} to your cart for ${productPrice}!`);

                // Here you would typically send this data to your server or update a local cart
                // For example:
                // addToCart(productName, productPrice);
            });
        });
    });

</script>

<style>


    body {
        font-family: Arial, sans-serif;
        background-color: #f8f8f8;
        margin: 0;
        padding: 0;
        color: rgb(44, 62, 80); /* Text color for body */
    }

    .container {
        width: 90%;
        margin: 0 auto;
        padding: 20px;
    }

    .page-title {
        text-align: center;
        color: rgb(44, 62, 80); /* Main color for the title */
        margin-bottom: 30px;
    }

    .products-grid {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        gap: 20px;
    }

    .product-item {
        background-color: #fff;
        border: 1px solid #ddd;
        border-radius: 5px;
        padding: 15px;
        text-align: center;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .product-item:hover {
            transform: scale(1.05);
            box-shadow: 0 4px 8px rgba(44, 62, 80, 0.2); /* Subtle shadow with main color on hover */
            border-color: rgb(44, 62, 80); /* Border color on hover */
        }

    .product-image {
        max-width: 100%;
        height: auto;
        border-radius: 5px;
    }

    .product-name {
        font-size: 18px;
        color: rgb(44, 62, 80); /* Main color for product names */
        margin: 10px 0;
    }

    .product-price {
        font-size: 16px;
        color: rgb(44, 62, 80); /* Keeping the original color for price */
        font-weight: bold;
    }

    /* Add this for a button or link if you want to include one */
    .add-to-cart {
        background-color: rgb(44, 62, 80);
        color: white;
        border: none;
        padding: 10px 15px;
        border-radius: 5px;
        cursor: pointer;
        text-decoration: none;
        display: inline-block;
        margin-top: 10px;
        transition: background-color 0.3s ease;
    }

    .add-to-cart:hover {
            background-color: rgba(44, 62, 80, 0.8);
    }

    .SearchBarContainer{
        display: flex;
        justify-content:center;
        align-items: center;
    }

    .SearchBar{
        border-radius: 10px;
        border: 3px solid rgba(44, 62, 80, 0.8);
        background-color: white;
        color: black;
        padding-left:20px;
        padding-right: 20px;
        font-size: 20px;
    }

    .circle-button {
        width: 37px;
        height: 37px;
        border-radius: 50%;
        border: none;
        background-color: white;
        border:3px solid rgba(44, 62, 80, 0.8);
        font-size: 20px;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: background-color 0.3s ease;
        margin-left: 5px;
    }

        .circle-button:hover {
            background-color: rgba(44, 62, 80, 0.8);
            border-color:white;
        }

</style>



<div class="SearchBarContainer">
    
    <input class ="SearchBar" type="text" id="myInput" onkeyup="myFunction()" placeholder="Search..">
    <button class="circle-button"><i class="fas fa-magnifying-glass"></i></button>

</div>

<div class="container">
    <h1 class="page-title">Our Bakery Products</h1>
    <div class="products-grid">
        <!-- REPLACE HARDCODED PRODUCTS WITH DYNAMIC ONES -->
        @foreach (var product in Model)
        {
            <div class="product-item">
                <!-- Link product image to Details page -->
                <a asp-action="Details" asp-route-id="@product.ProductId">
                    <img src="@product.ImageUrl" alt="@product.Name" class="product-image">
                </a>
                <h2 class="product-name">
                    <a asp-action="Details" asp-route-id="@product.ProductId" style="color: inherit; text-decoration: none;">
                        @product.Name
                    </a>
                </h2>
                <p class="product-price">$@product.Price.ToString("0.00")</p>
                <button class="add-to-cart"
                        data-product-id="@product.ProductId"
                        data-product-name="@product.Name"
                        data-product-price="@product.Price">
                    Add to Cart
                </button>
                <!-- Add review count link -->
                <div class="product-reviews" style="margin-top: 10px;">
                    <a asp-controller="Reviews" asp-action="Index" asp-route-productId="@product.ProductId"
                       style="color: rgb(44, 62, 80); font-size: 0.9em;">
                        @(product.Reviews?.Count ?? 0) reviews
                    </a>
                </div>
            </div>
        }
    </div>
</div>
